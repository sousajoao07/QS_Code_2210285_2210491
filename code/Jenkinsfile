pipeline{
    agent any  
    tools {nodejs "NodeJS"}
    parameters{
        string(name: 'SPEC', defaultValue:"cypress/integration/frutosOeste_spec.js", description: "Enter the cypress script path that you want to execute")
        choice(name: 'BROWSER', choices:['electron'], description: "Select the browser to be used in your cypress tests")
    }

    stages {
        stage('Build/Deploy app to staging') {
            steps {
                sshPublisher(
                    publishers: [sshPublisherDesc(
                        configName: 'staging', 
                        transfers: [
                            sshTransfer(
                                cleanRemote: false, 
                                excludes: 'node_modules/', 
                                execCommand: '''
                                cd /var/www/frutos
                                npm install
                                composer install
                                npm run prod ''', 
                                execTimeout: 120000, 
                                flatten: false, 
                                makeEmptyDirs: false, 
                                noDefaultExcludes: false, 
                                patternSeparator: '[, ]+', 
                                remoteDirectory: '', 
                                remoteDirectorySDF: false, 
                                removePrefix: '', 
                                sourceFiles: '**/*')],             
                usePromotionTimestamp: false, 
                useWorkspaceInPromotion: false, 
                verbose: true)])
            }
        }
        stage('Run automated tests') {
             steps {
                dir('tests') {
                    sh 'npm prune'
                    sh 'npm cache clean --force'
                    sh 'npm i'
                    sh 'npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator'
                    sh 'rm -f mochawesome.json'
                    sh 'npx cypress run --config --browser ${BROWSER} --spec ${SPEC} --reporter mochawesome'
                    sh 'npx mochawesome-merge ./mochawesome-report/*.json > mochawesome.json'
                    sh 'npx marge ./mochawesome-report/mochawesome.json'
                }
            }
            post {
                success {
                    publishHTML (
                        target : [
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: './tests/mochawesome-report',
                            reportFiles: 'mochawesome.html',
                            reportName: 'My Reports',
                            reportTitles: 'The Report'])
                }
            }
        }
        stage('Perform manual testing...'){
            steps {
                timeout(activity: true, time: 5) {
                    input 'Proceed to production?'
                }
           }
        }
        stage('Release to production') {
            steps {
                sshPublisher(
                    publishers: [sshPublisherDesc(
                        configName: 'production', 
                        transfers: [
                            sshTransfer(
                                cleanRemote: false, 
                                excludes: 'node_modules/', 
                                execCommand: '''
                                cd /var/www/frutos
                                npm install
                                composer install
                                npm run prod ''', 
                                execTimeout: 120000, 
                                flatten: false, 
                                makeEmptyDirs: false, 
                                noDefaultExcludes: false, 
                                patternSeparator: '[, ]+', 
                                remoteDirectory: '', 
                                remoteDirectorySDF: false, 
                                removePrefix: '', 
                                sourceFiles: '**/*')],             
                usePromotionTimestamp: false, 
                useWorkspaceInPromotion: false, 
                verbose: true)])
            }
        }
    }
}